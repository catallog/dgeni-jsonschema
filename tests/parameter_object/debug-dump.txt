[ { fileInfo: 
     { fileReader: 'jsdocFileReader',
       filePath: '/home/basask/dev/public/dgeni-jsonschema/tests/parameter_object/module/module.js',
       baseName: 'module',
       extension: 'js',
       basePath: '/home/basask/dev/public/dgeni-jsonschema/tests/parameter_object/module',
       relativePath: 'module.js',
       projectRelativePath: 'module/module.js',
       content: 'import templateUrl from \'./template.html\';\n\nclass ComponentController {\n  constructor(){};\n  $onInit(){};\n}\n\n/**\n * @name deepParameterComponent\n *\n * @description\n * Here goes this component description\n *\n * @param {string} title - title description\n * @param {object} params - params description\n * @param {string} [params.name=DefaultName] - Name of this entry\n * @param {int} params.id - ID of this entry\n * @param {object} params.subparam - Subparam entry\n * @param {int} params.subparam.id - Subparam ID description\n *\n **/\nconst componentConfig = {\n  bindings: {\n    title: \'@\',\n    params: \'<\'\n  },\n  controller: [ComponentController],\n  templateUrl: templateUrl\n};\n\nexport default componentConfig;\n',
       ast: [Object] },
    startingLine: 8,
    endingLine: 21,
    content: '@name deepParameterComponent\n\n@description\nHere goes this component description\n\n@param {string} title - title description\n@param {object} params - params description\n@param {string} [params.name=DefaultName] - Name of this entry\n@param {int} params.id - ID of this entry\n@param {object} params.subparam - Subparam entry\n@param {int} params.subparam.id - Subparam ID description',
    codeNode: 
     { type: 'VariableDeclaration',
       declarations: [Object],
       kind: 'const',
       range: [Object],
       loc: [Object],
       leadingComments: [Object] },
    codeAncestors: [ [Object] ],
    docType: 'js',
    tags: 
     { tags: [Object],
       tagsByName: [Object],
       badTags: [],
       description: '' },
    name: 'deepParameterComponent',
    params: [ [Object], [Object], [Object], [Object], [Object], [Object] ],
    description: 'Here goes this component description',
    codeName: 'componentConfig',
    schema: 
     { description: 'Here goes this component description',
       type: 'object',
       title: 'deepParameterComponent',
       required: [Object],
       properties: [Object] },
    id: 'deepParameterComponent',
    aliases: [ 'deepParameterComponent' ],
    path: '/home/basask/dev/public/dgeni-jsonschema/tests/parameter_object/module/schema-generated',
    outputPath: '/home/basask/dev/public/dgeni-jsonschema/tests/parameter_object/module/schema-generated.json',
    renderedContent: '{\n  "description": "Here goes this component description",\n  "type": "object",\n  "title": "deepParameterComponent",\n  "required": [\n    "params",\n    "title"\n  ],\n  "properties": {\n    "title": {\n      "description": "title description",\n      "type": "string"\n    },\n    "params": {\n      "description": "params description",\n      "type": "object",\n      "required": [\n        "id",\n        "subparam"\n      ],\n      "properties": {\n        "name": {\n          "description": "Name of this entry",\n          "type": "string",\n          "default": "DefaultName"\n        },\n        "id": {\n          "description": "ID of this entry",\n          "type": "int"\n        },\n        "subparam": {\n          "description": "Subparam entry",\n          "type": "object",\n          "required": [\n            "id"\n          ],\n          "properties": {\n            "id": {\n              "description": "Subparam ID description",\n              "type": "int"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n' } ]